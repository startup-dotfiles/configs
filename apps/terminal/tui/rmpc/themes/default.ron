// https://mierak.github.io/rmpc/next/configuration/theme/

#![enable(implicit_some)]
#![enable(unwrap_newtypes)]
#![enable(unwrap_variant_newtypes)]
(
    default_album_art_path: None,

    background_color: None,
    header_background_color: None,
    modal_background_color: None,
    modal_backdrop: true, // increased visual clarity
    text_color: None,

    // Item
    highlighted_item_style: (fg: "black", bg: "#ea403f", modifiers: "Bold | Italic"),
    current_item_style: (fg: "black", bg: "#34B1FF", modifiers: "Italic"),

    // Border
    draw_borders: true,
    borders_style: (fg: "#8ccf7e"),
    highlight_border_style: (fg: "blue"),

    // Misc
    format_tag_separator: " | ",
    lyrics: (
        timestamp: false, // show [00:00]
    ),
    symbols: (song: "S", dir: "D", marker: "M", ellipsis: "..."),

    // ----------------------------------------------------------------------------------------

    tab_bar: (
        // enabled: true, // WARNING: Deprecated
        active_style: (fg: "black", bg: "blue", modifiers: "Bold"),
        inactive_style: (),
    ),
    progress_bar: (
        symbols: ["-", ">", " "],   // ->
        track_style: (fg: "#1e2030"),
        elapsed_style: (fg: "blue"),
        thumb_style: (fg: "blue", bg: "#1e2030"),
    ),
    scrollbar: (
        symbols: ["‚îÇ", "‚ñà", "‚ñ≤", "‚ñº"],
        track_style: (),
        ends_style: (),
        thumb_style: (fg: "blue"),
    ),

    // https://mierak.github.io/rmpc/next/configuration/layout/
    // layout & components
    // NOTE: Because terminal font size affects display, you may need to adjust the size manually.
    layout: Split(
        direction: Vertical,
        panes: [
            (
                size: "15",
                pane: Split(
                    direction: Horizontal,
                    panes: [
                        (
                            size: "20%",
                            pane: Pane(AlbumArt),
                            borders: "RIGHT",
                        ),
                        (
                            size: "80%",
                            pane: Split(
                                direction: Vertical,
                                panes: [
                                    (size: "20%", pane: Pane(Header)),
                                    (size: "70%", pane: Pane(Cava)),
                                    (size: "10%", pane: Pane(ProgressBar)),
                                ]
                            )
                        ),
                    ]
                ),
            ),
            (
                size: "6%",
                pane: Pane(Tabs),
            ),
            (
                size: "70%",
                pane: Pane(TabContent),
            ),
        ],
    ),


    // https://mierak.github.io/rmpc/next/configuration/header/
    // --------------------------------------------------------------------
    // [Playing/Paused]         Song Title                 Volume: ‚ñÅ‚ñÇ‚ñÉ‚ñÑ‚ñÖ‚ñÜ‚ñá‚ñà
    // 0:38/3:09 (192 kbps)   Artist - Album    Repeat/Random/Cosume/Single
    // --------------------------------------------------------------------
    header: (
        rows: [
            (
                // [Playing/Paused/...]
                left: [
                    (kind: Text("["), style: (fg: "yellow", modifiers: "Bold")),
                    (kind: Property(Status(State)), style: (fg: "yellow", modifiers: "Bold")),
                    (kind: Text("]"), style: (fg: "yellow", modifiers: "Bold"))
                ],
                // Song Title
                center: [
                    (kind: Property(Song(Title)), style: (modifiers: "Bold"),
                        default: (kind: Text("No Song"), style: (modifiers: "Bold"))
                    )
                ],
                // Volume: ‚ñÅ‚ñÇ‚ñÉ‚ñÑ‚ñÖ‚ñÜ‚ñá‚ñà
                right: [
                    (kind: Property(Widget(ScanStatus)), style: (fg: "blue")),
                    (kind: Property(Widget(Volume)), style: (fg: "blue"))
                ]
            ),
            (
                // 0:38/3:09 (192 kbps)
                left: [
                    (kind: Property(Status(Elapsed))),
                    (kind: Text(" / ")),
                    (kind: Property(Status(Duration))),
                    (kind: Text(" (")),
                    (kind: Property(Status(Bitrate))),
                    (kind: Text(" kbps)"))
                ],
                // Artist - Album
                center: [
                    (kind: Property(Song(Artist)), style: (fg: "yellow", modifiers: "Bold"),
                        default: (kind: Text("Unknown"), style: (fg: "yellow", modifiers: "Bold"))
                    ),
                    (kind: Text(" - ")),
                    (kind: Property(Song(Album)),
                        default: (kind: Text("Unknown Album"))
                    )
                ],
                // Repeat/Random/Cosume/Single
                right: [
                    (
                        kind: Property(Widget(States(
                            active_style: (fg: "white", modifiers: "Bold"),
                            separator_style: (fg: "white")))
                        ),
                        style: (fg: "dark_gray")
                    ),
                ]
            ),
        ],
    ),

    // https://mierak.github.io/rmpc/next/configuration/song-table/
    // Title       Artist       Album       Duration
    // ----------------------------------------------
    show_song_table_header: true, // NOTE: enable it
    song_table_album_separator: None,
    song_table_format: [
        (
            prop: (kind: Property(Title), style: (fg: "#68727A"),
                default: (kind: Text("Unknown"))
            ),
            width: "35%",
        ),
        (
            prop: (kind: Property(Artist), style: (fg: "#e5c76b"),
                default: (kind: Text("Unknown"), style: (fg: "white"))
            ),
            width: "20%",
            alignment: Left,
        ),
        (
            prop: (kind: Property(Album), style: (fg: "#6cbfbf"),
                default: (kind: Text("Unknown Album"), style: (fg: "white"))
            ),
            width: "30%",
        ),
        (
            prop: (kind: Property(Duration), style: (fg: "white", modifiers: "Italic"),
                default: (kind: Text("-"))
            ),
            width: "15%",
            alignment: Right,
        ),
    ],

    preview_label_style: (fg: "yellow"),
    preview_metadata_group_style: (fg: "yellow", modifiers: "Bold"),
    browser_column_widths: [20, 38, 42],
    browser_song_format: [
        (
            kind: Group([
                (kind: Property(Track)),
                (kind: Text(" ")),
            ])
        ),
        (
            kind: Group([
                (kind: Property(Artist)),
                (kind: Text(" - ")),
                (kind: Property(Title)),
            ]),
            default: (kind: Property(Filename))
        ),
    ],

    // https://mierak.github.io/rmpc/next/configuration/cava/
    cava: (
        // symbols that will be used to draw the bar in the visualiser, in ascending order of
        // fill fraction
        bar_symbols: ['‚ñÅ', '‚ñÇ', '‚ñÉ', '‚ñÑ', '‚ñÖ', '‚ñÜ', '‚ñá', '‚ñà'],
        // similar to bar_symbols but these are used for the top-down rendering, meaning for orientation
        // "Horizontal" and "Top"
        inverted_bar_symbols: ['‚ñî', 'üÆÇ', 'üÆÉ', '‚ñÄ', 'üÆÑ', 'üÆÖ', 'üÆÜ', '‚ñà'],

        // bg_color: "black", // background color, defaults to rmpc's bg color if not provided
        bar_width: 1,   // width of a single bar in columns
        bar_spacing: 1, // free space between bars in columns

        // Possible values are "Top", "Bottom" and "Horizontal". Top makes the bars go from top to
        // bottom, "Bottom" is from bottom up, and "Horizontal" is split in the middle with bars going
        // both down and up from there.
        // Using non-default symbols with "Top" and "Horizontal" may produce undesired output.
        orientation: Bottom,
        // orientation: Horizontal,

        // Colors can be configured in three different ways: a single color, different colors
        // per row and a gradient. You can use the same colors as everywhere else. Only specify
        // one of these:

        // Every bar symbol will be red
        // bar_color: Single("red"),

        // The first two rows(two lowest amplitudes) will be red, after that two green rows
        // and the rest will be blue. You can have as many as you want here. The last value
        // will be used if the height exceeds the length of this array.
        // bar_color: Rows([
        //   "red",
        //   // "red",
        //   "green",
        //   // "green",
        //   "blue",
        // ])

        // A simple color gradient. This is a map where keys are percent values of the height
        // where the color starts. After that it is linearly interpolated towards the next value.
        // In this example, the color will start at green for the lowest amplitudes, go towards
        // blue at half amplitudes and finishing as red for the highest values. Keys must be between
        // 0 and 100 and if the first or last key are not 0 and 100 respectively, the lowest and highest
        // value will be used as 0 and 100. Only hex and RGB colors are supported here and your terminal
        // must support them as well!
         bar_color: Gradient({
           // 0: "rgb(  0, 255,   0)",
           // 50: "rgb(  0,   0, 255)",
           // 100: "rgb(255,   0,   0)",
           0:   "#232a2d",
           15:  "#e57474",
           30:  "#8ccf7e",
           45:  "#e5c76b",
           60:  "#67b0e8",
           75:  "#c47fd5",
           90:  "#6cbfbf",
           100: "#b3b9b8",
         })
    ),
)
